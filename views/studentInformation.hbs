<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Document</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="https://assets.codepen.io/344846/style.css" rel="stylesheet" />
  <link rel="stylesheet" href="/form.css" />
  <link rel="stylesheet" href="/assets/css/data-show-style.css">
  <style>
    .edit-box {
      width: 400px;
      display: none;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 20px;
      background-color: #f0f0f0;
      border: 1px solid #ccc;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    
  </style>
</head>

<body>

  <div>

    {{!-- <button onclick="showEditBox()">Edit</button> --}}
  </div>

  <!-- Edit Box -->


  <script>

    function showEditBox(class_no, roll, year, first_name, last_name, father_name, mother_name, phone, address, comment) {
      console.log(class_no, roll, year);
      const editBox = document.getElementById('editBox');


      document.getElementById('classNoInput').value = class_no;
      document.getElementById('rollNoInput').value = roll;
      document.getElementById('yearNoInput').value = year;


      document.getElementById('firstNameInput').value = first_name;
      document.getElementById('lastNameInput').value = last_name;
      document.getElementById('fatherNameInput').value = father_name;

      document.getElementById('motherNameInput').value = mother_name;
      document.getElementById('phoneNoInput').value = phone;
      document.getElementById('addressInput').value = address;


      document.getElementById('commentInput').value = comment;

      editBox.style.display = 'block';
    }

    function cancelEdit() {
      // Hide the edit box without saving changes
      document.getElementById('editBox').style.display = 'none';
    }


  </script>

  <script>
    function submitForm() {
      document.getElementById('editBox').style.display = 'none';
      try {
        // Get data from the form

        const classNo = document.getElementById('classNoInput').value;
        const firstName = document.getElementById('firstNameInput').value;
        const lastName = document.getElementById('lastNameInput').value;
        const rollNo = document.getElementById('rollNoInput').value;
        const yearNo = document.getElementById('yearNoInput').value;
        const fatherName = document.getElementById('fatherNameInput').value;
        const motherName = document.getElementById('motherNameInput').value;
        const phoneNo = document.getElementById('phoneNoInput').value;
        const address = document.getElementById('addressInput').value;
        const comment = document.getElementById('commentInput').value;

        // Create a data object to send to the server
        const data = {
          classNo: classNo,
          firstName: firstName,
          lastName: lastName,
          rollNo: rollNo,
          yearNo: yearNo,
          fatherName: fatherName,
          motherName: motherName,
          phoneNo: phoneNo,
          address: address,
          comment: comment
        };
        console.log(classNo, rollNo, yearNo);

        // Send a PUT request to the server
        fetch('/update-student-info', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
          .then(response => response.json())
          .then(result => {
            console.log('Update successful:', result);
            updateResults();
          })
          .catch(error => {
            console.error('Error updating data:', error);
          });
      } catch (error) {
        console.error('An error occurred:', error);
      }
    }
  </script>































<div class="bg-white  dark:text-gray-900 text-gray-700 h-screen flex overflow-hidden text-sm"
  style="background-color: rgb(255, 255, 255);">
  <!-- side navigation section -->
  <div class="bg-white w-20 flex-shrink-0 border-r    flex-col hidden sm:flex">
    <div class="h-16 text-blue-500 flex items-center justify-center">
      <img src="http://localhost:4000/assets/images/annada.jpeg" style="width: 35px; height: 35px; border-radius: 50%"
        alt="" srcset="" />
    </div>

    <div class="flex mx-auto flex-grow mt-4 flex-col text-gray-900 space-y-4">
      <a href="/">
        <button3.9632+ class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
          <svg viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round"
            stroke-linejoin="round">
            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
            <polyline points="9 22 9 12 15 12 15 22"></polyline>
          </svg>
          </button>
      </a>

      <a href="http://localhost:4000/http://127.0.0.1:5500/main-menu.html">
        <button class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
          <svg viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round"
            stroke-linejoin="round">
            <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect>
            <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>
          </svg>
        </button>
      </a>

      <a href="/std-entry">
        <button class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
          <svg viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round"
            stroke-linejoin="round">
            <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
            <line x1="12" y1="11" x2="12" y2="17"></line>
            <line x1="9" y1="14" x2="15" y2="14"></line>
          </svg>
        </button>
      </a>

      <button class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2"
          fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path d="M18 12l-4-4v3H6v2h8v3z"></path>
          <path d="M20 6h2a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-2"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- main-center section -->
  <div class="flex-grow overflow-hidden h-full flex flex-col">

    <!-- top-nav-links -->
    <div class="h-16 lg:flex w-full border-b hidden px-10">
      <div class="flex h-full text-gray-600 dark:text-gray-900">
        <a href="/"
          class="cursor-pointer h-full border-b-2 border-blue-500 text-blue-500 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
          style="color: black; font-weight: 600;border-bottom: 2px solid gray;">হোমপেজ</a>
        <a href="/http://127.0.0.1:5500/main-menu.html"
          class="cursor-pointer h-full border-b-2 border-blue-500 text-blue-500 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
          style="color: black; font-weight: 600; border-bottom: 2px solid gray;">এন্ট্রি মেনু</a>
        <a href="/http://127.0.0.1:5500/dist-page1.html"
          class="cursor-pointer h-full border-b-2 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center "
          style="padding: 3px; color: black; font-weight: 600; border-bottom: 2px solid gray;">বই বিতরণী তথ্য</a>
        <a href="/http://127.0.0.1:5500/page1.html"
          class="cursor-pointer h-full border-b-2 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
          style="color: black; font-weight: 600;border-bottom: 2px solid rgb(30, 105, 180);">শিক্ষার্থীদের তথ্য</a>
      <a href="/http://127.0.0.1:5500/std-page1.html"
            class="cursor-pointer h-full border-b-2 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
            style="padding: 3px; color: black; font-weight: 600; border-bottom: 2px solid gray;">প্রাপ্ত বইয়ের তথ্য</a>
      
      </div>

      <div class="ml-auto flex items-center space-x-7">

        <a href="http://127.0.0.1:5500/profile.html">

          <button class="flex items-center">
            <span class="relative flex-shrink-0">
              <img class="w-7 h-7 rounded-full" src="http://localhost:4000/assets/images/profile_pic.jpg"
                alt="profile" />
              <span
                class="absolute right-0 -mb-0.5 bottom-0 w-2 h-2 rounded-full bg-green-500 border border-white dark:border-gray-900"></span>
            </span>
            <span class="ml-2">এডমিন</span>
            <svg viewBox="0 0 24 24" class="w-4 ml-1 flex-shrink-0" stroke="currentColor" stroke-width="2" fill="none"
              stroke-linecap="round" stroke-linejoin="round">
              <polyline points="6 9 12 15 18 9"></polyline>
            </svg>
          </button>
        </a>
      </div>
    </div>

    <div class="flex-grow flex overflow-x-hidden">

      <!-- 2nd-sidebar-class list -->
      <div class="xl:w-72 w-48 flex-shrink-0 border-r border-gray-20 h-full overflow-y-auto lg:block hidden p-5">

        <div class="space-y-4 mt-3">
            {{#each Classes}}
            <input type="hidden" class="classNumberNumerical" value="{{this}}">
        
        
            <div {{!--
                class="classBox bg-white p-3 w-full flex flex-col rounded-md  shadow-lg relative ring-2 ring-blue-500 focus:outline-none"
                style="border: 2px solid rgb(103, 103, 216);"> --}}
                class="classBox bg-white p-3 w-full flex flex-col rounded-md shadow">
                <button class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
                    <div
                        class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-gray-900 pb-2 mb-2 xl:border-b border-opacity-75 dark:border-gray-700 w-full">
                        <img src="http://localhost:4000/assets/images/{{this}}.png" class="w-7 h-7 mr-2 rounded-full"
                            alt="profile" />
                        <span class="showClassNumberBangla"> </span> <!-- Changed ID to Class for multiple instances -->
                    </div>
                    <div class="flex items-center w-full">
                        <div class="text-xs py-1 px-2 leading-none  bg-blue-100 text-blue-500 rounded-md">
                            প্রাথমিক
                        </div>
                    </div>
                </button>
            </div>
            {{/each}}
        
        
        
        
        
        
        </div>
      </div>



      

      <div class="flex-grow bg-white  overflow-y-auto">


        <div class="sm:p-7 p-4">

          <form class="my-form">
            <label for="yearInput">Enter Year:</label>
            <input type="text" id="yearNoInput" name="selectedYear" >
          </form>

          <table class="table">
            <thead>
              <tr>
                <th scope="col">নাম</th>
                <th scope="col">বাবার নাম</th>
                <th scope="col">মায়ের নাম</th>
                <th scope="col">শিক্ষাবর্ষ</th>
                <th scope="col">শ্রেণি</th>
                <th scope="col">রোল</th>
                <th scope="col">ফোন</th>
                <th scope="col">ঠিকানা</th>
                <th scope="col">অ্যাকশন</th>
              </tr>
            </thead>
            <tbody id="studentTableBody">
              <!-- Table body will be dynamically updated by JavaScript -->
            </tbody>
          </table>

          {{!-- <script>
            async function updateResults() {
              const yearInput = document.getElementById('yearInput');
              const selectedYear = yearInput.value;

              try {
                const response = await fetch(`http://localhost:4000/class1-year-submit?selectedYear=${selectedYear}`);
                if (response.ok) {
                  const data = await response.json();
                  updateTable(data);
                } else {
                  console.error('Error fetching data:', response.statusText);
                }
              } catch (error) {
                console.error('Error:', error.message);
              }
            }

            function updateTable(data) {
              const tableBody = document.getElementById('studentTableBody');
              tableBody.innerHTML = ''; // Clear existing content

              data.forEach(student => {
                const row = document.createElement('tr');
                row.innerHTML = `
        <td>${student.first_name} ${student.last_name}</td>
        <td>${student.father_name}</td>
        <td>${student.mother_name}</td>
        <td>${student.year}</td>
        <td>${student.class}</td>
        <td>${student.roll}</td>
        <td>${student.phone}</td>
        <td>${student.address}</td>
        <td>
          <button onclick="showEditBox('${student.class}','${student.roll}', '${student.year}', 
          '${student.first_name}', '${student.last_name}', '${student.father_name}', 
          '${student.mother_name}', '${student.phone}', '${student.address}', '${student.comment}')">
            Edit
          </button>
          <button onclick="deleteData('${student.class}','${student.roll}', '${student.year}')">
            Delete Student
          </button>
        </td>
      `;
                tableBody.appendChild(row);
              });
            }

            async function deleteData(classNo, roll, year) {
              const confirmed = window.confirm('Are you sure you want to delete this student record?');

              if (!confirmed) {
                return;
              }

              try {
                const response = await fetch(`http://localhost:4000/delete-student/${classNo}/${roll}/${year}`, {
                  method: 'DELETE',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                });

                if (response.ok) {
                  console.log('Student record deleted successfully');
                  // Update the table without refreshing the page
                  updateResults();
                } else {
                  const data = await response.json();
                  console.error(data.error);
                }
              } catch (error) {
                console.error('Error:', error.message);
              }
            }
          </script> --}}

          <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>

          <!-- this section is the page number navigation at the bottom of the website -->
          <div class="flex w-full mt-5 space-x-2 justify-end">
            <a href="/http://127.0.0.1:5500/page5.html">
              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                <svg class="w-4" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none"
                  stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="15 18 9 12 15 6"></polyline>
                </svg>
              </button>
            </a>
            <a href="/http://127.0.0.1:5500/page1.html">
              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 bg-white  dark:text-gray-900 leading-none">
                1
              </button>
            </a>
            <a href="/http://127.0.0.1:5500/page2.html">
              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-900 rounded-md shadow border border-gray-20 leading-none">
                2
              </button>
            </a>
            <a href="/http://127.0.0.1:5500/page3.html">
              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                3
              </button>
            </a>
            <a href="/http://127.0.0.1:5500/page4.html">
              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                4
              </button>
            </a>
            <a href="/http://127.0.0.1:5500/page5.html">

              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                5
              </button>
            </a>
            <a href="/http://127.0.0.1:5500/page2.html">
              <button
                class="inline-flex items-center h-8 w-8 justify-center text-gray-900 rounded-md shadow border border-gray-20 leading-none">
                <svg class="w-4" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none"
                  stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="9 18 15 12 9 6"></polyline>
                </svg>
              </button>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="/script/studentInfo.js"></script>
</body>

</html>